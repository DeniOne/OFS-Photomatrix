"""Add type column to division table

Revision ID: 11b243613af0
Revises: a3291a2b086e
Create Date: 2025-04-22 17:17:18.296498

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '11b243613af0'
down_revision: Union[str, None] = 'a3291a2b086e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Создаем тип Enum в PostgreSQL перед добавлением столбца
    division_type = postgresql.ENUM('DEPARTMENT', 'DIVISION', name='divisiontype')
    division_type.create(op.get_bind(), checkfirst=True)

    op.add_column('division', sa.Column('type', sa.Enum('DEPARTMENT', 'DIVISION', name='divisiontype'), nullable=False))
    
    # Устанавливаем значение по умолчанию для is_active
    op.alter_column('division', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False, # Оставляем nullable=False как в модели
               server_default=sa.true()) # Добавляем серверное значение по умолчанию True
               
    op.alter_column('division', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
    # op.alter_column('division', 'is_active',
    #            existing_type=sa.BOOLEAN(),
    #            nullable=True) # Закомментировано - используем вариант выше
    op.alter_column('division', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               # nullable=True, # Оставляем False как в модели
               existing_server_default=sa.text('now()'))
    op.alter_column('division', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               # nullable=True, # Оставляем False как в модели
               existing_server_default=sa.text('now()'))
    op.drop_constraint('uix_division_code_organization', 'division', type_='unique')
    op.create_index(op.f('ix_division_code'), 'division', ['code'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_division_code'), table_name='division')
    op.create_unique_constraint('uix_division_code_organization', 'division', ['code', 'organization_id'])
    op.alter_column('division', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('division', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('division', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               server_default=None) # Убираем default при откате
    op.alter_column('division', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.drop_column('division', 'type')
    
    # Удаляем тип Enum из PostgreSQL
    division_type = postgresql.ENUM('DEPARTMENT', 'DIVISION', name='divisiontype')
    division_type.drop(op.get_bind())
    # ### end Alembic commands ### 