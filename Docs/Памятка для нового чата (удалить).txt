Памятка: Проект ОФС Фотоматрица
Контекст: Разрабатываем систему управления оргструктурой (FastAPI + React/TS + Mantine + PostgreSQL).
Последние действия (01.05.2025):
Исправлена страница сотрудников:
Проблема: Не сохранялись/отображались организация и должность. Были ошибки TypeScript.
Решение:
Бэкенд: Починили логику в read_staff (правильное получение organization\name, возврат positions с position_name), update_staff (обновление staff.organization_id, корректная обработка StaffPosition - добавление/удаление/смена is_primary). Создали модель/миграцию для StaffOrganization и добавили логику ее обновления.
Фронтенд: Исправили StaffForm.tsx (правильное формирование массива positions при отправке, корректная инициализация полей при редактировании, добавлена форма пароля). Исправили StaffCard.tsx (отображение position_name из staff.positions). Обновили типы Staff, StaffCreate, StaffUpdate в frontend/src/types/staff.ts для соответствия API.
Результат: Страница сотрудника (/staff/:id) теперь корректно отображает данные, форма создания/редактирования работает правильно. TypeScript ошибки исправлены.
Обновлена документация: Чеклист (Docs/checklist.md) и лог проекта (Rules/project_log.md) обновлены.
Текущее состояние:
Базовая функциональность для управления Организациями, Подразделениями, Отделами, Должностями, Функциями и Сотрудниками (просмотр деталей, создание/редактирование) реализована на бэкенде и фронтенде.
Аутентификация работает.
Бэкенд и фронтенд запущены и работают стабильно после последних исправлений.
Следующие шаги (согласованные с пользователем):
Приоритет: Разработка Управления пользователями в приложении.
Создать страницу /users (таблица, пагинация, поиск/фильтры).
Реализовать CRUD для пользователей (форма создания/редактирования: Email, ФИО, пароль, статус, роль суперпользователя).
Создать/доработать API и хуки React Query для пользователей.
Дальнейшая задача: Интеграция с Rocket.Chat для регистрации/управления пользователями.
Требует исследования: выбор сервера (свой/облако), изучение API Rocket.Chat, выбор подхода (прямые API-вызовы с бэка или бот).
Начать с: Разработки страницы управления пользователями в приложении.